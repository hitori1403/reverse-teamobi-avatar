public final class ja implements j4 {
   private static final byte[] b;
   private static final byte[] c;
   private static final int[] d;
   private static final int[] e;
   private static final int[] f;
   private int g;
   private int[][] h = (int[][])null;
   private int i;
   private int j;
   private int k;
   private int l;
   private boolean m;
   private static final String[] a;

   private static int b(int var0, int var1) {
      return var0 >>> var1 | var0 << -var1;
   }

   private static int b(int var0) {
      return (var0 & 2139062143) << 1 ^ ((var0 & -2139062144) >>> 7) * 27;
   }

   private static int c(int var0) {
      return b[var0 & 0xFF] & 0xFF | (b[var0 >> 8 & 0xFF] & 0xFF) << 8 | (b[var0 >> 16 & 0xFF] & 0xFF) << 16 | b[var0 >>> 24] << 24;
   }

   public final void b(boolean var1, i6 var2) {
      if (!(var2 instanceof je)) {
         throw new IllegalArgumentException(a[4] + var2.getClass().getName());
      } else {
         je var11;
         byte[] var3 = (var11 = (je)var2).b;
         ja var12 = this;
         int var5;
         if (((var5 = var3.length / 4) == 4 || var5 == 6 || var5 == 8) && var5 << 2 == var3.length) {
            this.g = var5 + 6;
            int[][] var7 = new int[this.g + 1][4];
            int var6 = 0;

            for(int var8 = 0; var8 < var3.length; ++var6) {
               var7[var6 >> 2][var6 & 3] = var3[var8] & 255 | (var3[var8 + 1] & 255) << 8 | (var3[var8 + 2] & 255) << 16 | var3[var8 + 3] << 24;
               var8 += 4;
            }

            int var13 = this.g + 1 << 2;

            for(int var19 = var5; var19 < var13; ++var19) {
               var6 = var7[var19 - 1 >> 2][var19 - 1 & 3];
               if (var19 % var5 == 0) {
                  var6 = c(b(var6, 8)) ^ d[var19 / var5 - 1];
               } else if (var5 > 6 && var19 % var5 == 4) {
                  var6 = c(var6);
               }

               var7[var19 >> 2][var19 & 3] = var7[var19 - var5 >> 2][var19 - var5 & 3] ^ var6;
            }

            if (!var1) {
               for(int var18 = 1; var18 < var12.g; ++var18) {
                  for(int var20 = 0; var20 < 4; ++var20) {
                     int[] var10001 = var7[var18];
                     int var4 = var7[var18][var20];
                     int var14;
                     int var9 = b(var5 = b(var14 = b(var4)));
                     var4 ^= var9;
                     var10001[var20] = var14 ^ var5 ^ var9 ^ b(var14 ^ var4, 8) ^ b(var5 ^ var4, 16) ^ b(var4, 24);
                  }
               }
            }

            this.h = var7;
            this.m = var1;
         } else {
            String[] var10 = a;
            throw new IllegalArgumentException(var10[0]);
         }
      }
   }

   public final int b() {
      return 16;
   }

   public final int b(byte[] var1, int var2, byte[] var3, int var4) {
      if (this.h == null) {
         String[] var19 = a;
         throw new IllegalStateException(var19[3]);
      } else if (var2 + 16 > var1.length) {
         String[] var10 = a;
         throw new kt(var10[1]);
      } else if (var4 + 16 > var3.length) {
         throw new kt(a[2]);
      } else {
         if (this.m) {
            this.b(var1, var2);
            int[][] var12 = this.h;
            ja var11 = this;
            this.i ^= var12[0][0];
            this.j ^= var12[0][1];
            this.k ^= var12[0][2];
            this.l ^= var12[0][3];

            int var5;
            int var6;
            int var7;
            int var8;
            int var9;
            for(var5 = 1;
               var5 < var11.g - 1;
               var11.l = e[var9 & 0xFF] ^ b(e[var6 >> 8 & 0xFF], 24) ^ b(e[var7 >> 16 & 0xFF], 16) ^ b(e[var8 >>> 24], 8) ^ var12[var5++][3]
            ) {
               var6 = e[var11.i & 0xFF] ^ b(e[var11.j >> 8 & 0xFF], 24) ^ b(e[var11.k >> 16 & 0xFF], 16) ^ b(e[var11.l >>> 24], 8) ^ var12[var5][0];
               var7 = e[var11.j & 0xFF] ^ b(e[var11.k >> 8 & 0xFF], 24) ^ b(e[var11.l >> 16 & 0xFF], 16) ^ b(e[var11.i >>> 24], 8) ^ var12[var5][1];
               var8 = e[var11.k & 0xFF] ^ b(e[var11.l >> 8 & 0xFF], 24) ^ b(e[var11.i >> 16 & 0xFF], 16) ^ b(e[var11.j >>> 24], 8) ^ var12[var5][2];
               var9 = e[var11.l & 0xFF] ^ b(e[var11.i >> 8 & 0xFF], 24) ^ b(e[var11.j >> 16 & 0xFF], 16) ^ b(e[var11.k >>> 24], 8) ^ var12[var5++][3];
               var11.i = e[var6 & 0xFF] ^ b(e[var7 >> 8 & 0xFF], 24) ^ b(e[var8 >> 16 & 0xFF], 16) ^ b(e[var9 >>> 24], 8) ^ var12[var5][0];
               var11.j = e[var7 & 0xFF] ^ b(e[var8 >> 8 & 0xFF], 24) ^ b(e[var9 >> 16 & 0xFF], 16) ^ b(e[var6 >>> 24], 8) ^ var12[var5][1];
               var11.k = e[var8 & 0xFF] ^ b(e[var9 >> 8 & 0xFF], 24) ^ b(e[var6 >> 16 & 0xFF], 16) ^ b(e[var7 >>> 24], 8) ^ var12[var5][2];
            }

            var6 = e[var11.i & 0xFF] ^ b(e[var11.j >> 8 & 0xFF], 24) ^ b(e[var11.k >> 16 & 0xFF], 16) ^ b(e[var11.l >>> 24], 8) ^ var12[var5][0];
            var7 = e[var11.j & 0xFF] ^ b(e[var11.k >> 8 & 0xFF], 24) ^ b(e[var11.l >> 16 & 0xFF], 16) ^ b(e[var11.i >>> 24], 8) ^ var12[var5][1];
            var8 = e[var11.k & 0xFF] ^ b(e[var11.l >> 8 & 0xFF], 24) ^ b(e[var11.i >> 16 & 0xFF], 16) ^ b(e[var11.j >>> 24], 8) ^ var12[var5][2];
            var9 = e[var11.l & 0xFF] ^ b(e[var11.i >> 8 & 0xFF], 24) ^ b(e[var11.j >> 16 & 0xFF], 16) ^ b(e[var11.k >>> 24], 8) ^ var12[var5++][3];
            var11.i = b[var6 & 0xFF] & 255 ^ (b[var7 >> 8 & 0xFF] & 255) << 8 ^ (b[var8 >> 16 & 0xFF] & 255) << 16 ^ b[var9 >>> 24] << 24 ^ var12[var5][0];
            var11.j = b[var7 & 0xFF] & 255 ^ (b[var8 >> 8 & 0xFF] & 255) << 8 ^ (b[var9 >> 16 & 0xFF] & 255) << 16 ^ b[var6 >>> 24] << 24 ^ var12[var5][1];
            var11.k = b[var8 & 0xFF] & 255 ^ (b[var9 >> 8 & 0xFF] & 255) << 8 ^ (b[var6 >> 16 & 0xFF] & 255) << 16 ^ b[var7 >>> 24] << 24 ^ var12[var5][2];
            var11.l = b[var9 & 0xFF] & 255 ^ (b[var6 >> 8 & 0xFF] & 255) << 8 ^ (b[var7 >> 16 & 0xFF] & 255) << 16 ^ b[var8 >>> 24] << 24 ^ var12[var5][3];
            this.c(var3, var4);
         } else {
            this.b(var1, var2);
            this.b(this.h);
            this.c(var3, var4);
         }

         return 16;
      }
   }

   public final void c() {
   }

   private void b(byte[] var1, int var2) {
      this.i = var1[var2++] & 255;
      this.i |= (var1[var2++] & 255) << 8;
      this.i |= (var1[var2++] & 255) << 16;
      this.i |= var1[var2++] << 24;
      this.j = var1[var2++] & 255;
      this.j |= (var1[var2++] & 255) << 8;
      this.j |= (var1[var2++] & 255) << 16;
      this.j |= var1[var2++] << 24;
      this.k = var1[var2++] & 255;
      this.k |= (var1[var2++] & 255) << 8;
      this.k |= (var1[var2++] & 255) << 16;
      this.k |= var1[var2++] << 24;
      this.l = var1[var2++] & 255;
      this.l |= (var1[var2++] & 255) << 8;
      this.l |= (var1[var2++] & 255) << 16;
      this.l |= var1[var2] << 24;
   }

   private void c(byte[] var1, int var2) {
      var1[var2++] = (byte)this.i;
      var1[var2++] = (byte)(this.i >> 8);
      var1[var2++] = (byte)(this.i >> 16);
      var1[var2++] = (byte)(this.i >> 24);
      var1[var2++] = (byte)this.j;
      var1[var2++] = (byte)(this.j >> 8);
      var1[var2++] = (byte)(this.j >> 16);
      var1[var2++] = (byte)(this.j >> 24);
      var1[var2++] = (byte)this.k;
      var1[var2++] = (byte)(this.k >> 8);
      var1[var2++] = (byte)(this.k >> 16);
      var1[var2++] = (byte)(this.k >> 24);
      var1[var2++] = (byte)this.l;
      var1[var2++] = (byte)(this.l >> 8);
      var1[var2++] = (byte)(this.l >> 16);
      var1[var2] = (byte)(this.l >> 24);
   }

   private void b(int[][] var1) {
      this.i ^= var1[this.g][0];
      this.j ^= var1[this.g][1];
      this.k ^= var1[this.g][2];
      this.l ^= var1[this.g][3];

      int var2;
      int var3;
      int var4;
      int var5;
      int var6;
      for(var2 = this.g - 1;
         var2 > 1;
         this.l = f[var6 & 0xFF] ^ b(f[var5 >> 8 & 0xFF], 24) ^ b(f[var4 >> 16 & 0xFF], 16) ^ b(f[var3 >>> 24], 8) ^ var1[var2--][3]
      ) {
         var3 = f[this.i & 0xFF] ^ b(f[this.l >> 8 & 0xFF], 24) ^ b(f[this.k >> 16 & 0xFF], 16) ^ b(f[this.j >>> 24], 8) ^ var1[var2][0];
         var4 = f[this.j & 0xFF] ^ b(f[this.i >> 8 & 0xFF], 24) ^ b(f[this.l >> 16 & 0xFF], 16) ^ b(f[this.k >>> 24], 8) ^ var1[var2][1];
         var5 = f[this.k & 0xFF] ^ b(f[this.j >> 8 & 0xFF], 24) ^ b(f[this.i >> 16 & 0xFF], 16) ^ b(f[this.l >>> 24], 8) ^ var1[var2][2];
         var6 = f[this.l & 0xFF] ^ b(f[this.k >> 8 & 0xFF], 24) ^ b(f[this.j >> 16 & 0xFF], 16) ^ b(f[this.i >>> 24], 8) ^ var1[var2--][3];
         this.i = f[var3 & 0xFF] ^ b(f[var6 >> 8 & 0xFF], 24) ^ b(f[var5 >> 16 & 0xFF], 16) ^ b(f[var4 >>> 24], 8) ^ var1[var2][0];
         this.j = f[var4 & 0xFF] ^ b(f[var3 >> 8 & 0xFF], 24) ^ b(f[var6 >> 16 & 0xFF], 16) ^ b(f[var5 >>> 24], 8) ^ var1[var2][1];
         this.k = f[var5 & 0xFF] ^ b(f[var4 >> 8 & 0xFF], 24) ^ b(f[var3 >> 16 & 0xFF], 16) ^ b(f[var6 >>> 24], 8) ^ var1[var2][2];
      }

      var3 = f[this.i & 0xFF] ^ b(f[this.l >> 8 & 0xFF], 24) ^ b(f[this.k >> 16 & 0xFF], 16) ^ b(f[this.j >>> 24], 8) ^ var1[var2][0];
      var4 = f[this.j & 0xFF] ^ b(f[this.i >> 8 & 0xFF], 24) ^ b(f[this.l >> 16 & 0xFF], 16) ^ b(f[this.k >>> 24], 8) ^ var1[var2][1];
      var5 = f[this.k & 0xFF] ^ b(f[this.j >> 8 & 0xFF], 24) ^ b(f[this.i >> 16 & 0xFF], 16) ^ b(f[this.l >>> 24], 8) ^ var1[var2][2];
      var6 = f[this.l & 0xFF] ^ b(f[this.k >> 8 & 0xFF], 24) ^ b(f[this.j >> 16 & 0xFF], 16) ^ b(f[this.i >>> 24], 8) ^ var1[var2][3];
      this.i = c[var3 & 0xFF] & 255 ^ (c[var6 >> 8 & 0xFF] & 255) << 8 ^ (c[var5 >> 16 & 0xFF] & 255) << 16 ^ c[var4 >>> 24] << 24 ^ var1[0][0];
      this.j = c[var4 & 0xFF] & 255 ^ (c[var3 >> 8 & 0xFF] & 255) << 8 ^ (c[var6 >> 16 & 0xFF] & 255) << 16 ^ c[var5 >>> 24] << 24 ^ var1[0][1];
      this.k = c[var5 & 0xFF] & 255 ^ (c[var4 >> 8 & 0xFF] & 255) << 8 ^ (c[var3 >> 16 & 0xFF] & 255) << 16 ^ c[var6 >>> 24] << 24 ^ var1[0][2];
      this.l = c[var6 & 0xFF] & 255 ^ (c[var5 >> 8 & 0xFF] & 255) << 8 ^ (c[var4 >> 16 & 0xFF] & 255) << 16 ^ c[var3 >>> 24] << 24 ^ var1[0][3];
   }

   static {
      String[] var5 = new String[5];
      int var3 = 0;
      String var2 = "R\u0006\u001bC_^%~\u0017\nC]T?9RP[\u001c\nr+LPV\u0005\u001b)p\u0017\u0011M\u0016p\r\u0012\u0016G\u001b)l\u0005\u0004\u0006A\u001b?v\fB\u0010[T9m\u0017v\u0016\u0016\u0013FOk{\u0016\u0004\u0005VIkm\f\rC@S$k\u0017";
      int var4 = "R\u0006\u001bC_^%~\u0017\nC]T?9RP[\u001c\nr+LPV\u0005\u001b)p\u0017\u0011M\u0016p\r\u0012\u0016G\u001b)l\u0005\u0004\u0006A\u001b?v\fB\u0010[T9m\u0017v\u0016\u0016\u0013FOk{\u0016\u0004\u0005VIkm\f\rC@S$k\u0017"
         .length();
      char var1 = ' ';
      int var7 = -1;

      label24:
      while(true) {
         String var10000 = var2.substring(++var7, var7 + var1);
         byte var10001 = -1;

         while(true) {
            String var12 = a(a(var10000));
            switch(var10001) {
               case 0:
                  var5[var3++] = var12;
                  if ((var7 += var1) >= var4) {
                     a = var5;
                     b = new byte[]{
                        99,
                        124,
                        119,
                        123,
                        -14,
                        107,
                        111,
                        -59,
                        48,
                        1,
                        103,
                        43,
                        -2,
                        -41,
                        -85,
                        118,
                        -54,
                        -126,
                        -55,
                        125,
                        -6,
                        89,
                        71,
                        -16,
                        -83,
                        -44,
                        -94,
                        -81,
                        -100,
                        -92,
                        114,
                        -64,
                        -73,
                        -3,
                        -109,
                        38,
                        54,
                        63,
                        -9,
                        -52,
                        52,
                        -91,
                        -27,
                        -15,
                        113,
                        -40,
                        49,
                        21,
                        4,
                        -57,
                        35,
                        -61,
                        24,
                        -106,
                        5,
                        -102,
                        7,
                        18,
                        -128,
                        -30,
                        -21,
                        39,
                        -78,
                        117,
                        9,
                        -125,
                        44,
                        26,
                        27,
                        110,
                        90,
                        -96,
                        82,
                        59,
                        -42,
                        -77,
                        41,
                        -29,
                        47,
                        -124,
                        83,
                        -47,
                        0,
                        -19,
                        32,
                        -4,
                        -79,
                        91,
                        106,
                        -53,
                        -66,
                        57,
                        74,
                        76,
                        88,
                        -49,
                        -48,
                        -17,
                        -86,
                        -5,
                        67,
                        77,
                        51,
                        -123,
                        69,
                        -7,
                        2,
                        127,
                        80,
                        60,
                        -97,
                        -88,
                        81,
                        -93,
                        64,
                        -113,
                        -110,
                        -99,
                        56,
                        -11,
                        -68,
                        -74,
                        -38,
                        33,
                        16,
                        -1,
                        -13,
                        -46,
                        -51,
                        12,
                        19,
                        -20,
                        95,
                        -105,
                        68,
                        23,
                        -60,
                        -89,
                        126,
                        61,
                        100,
                        93,
                        25,
                        115,
                        96,
                        -127,
                        79,
                        -36,
                        34,
                        42,
                        -112,
                        -120,
                        70,
                        -18,
                        -72,
                        20,
                        -34,
                        94,
                        11,
                        -37,
                        -32,
                        50,
                        58,
                        10,
                        73,
                        6,
                        36,
                        92,
                        -62,
                        -45,
                        -84,
                        98,
                        -111,
                        -107,
                        -28,
                        121,
                        -25,
                        -56,
                        55,
                        109,
                        -115,
                        -43,
                        78,
                        -87,
                        108,
                        86,
                        -12,
                        -22,
                        101,
                        122,
                        -82,
                        8,
                        -70,
                        120,
                        37,
                        46,
                        28,
                        -90,
                        -76,
                        -58,
                        -24,
                        -35,
                        116,
                        31,
                        75,
                        -67,
                        -117,
                        -118,
                        112,
                        62,
                        -75,
                        102,
                        72,
                        3,
                        -10,
                        14,
                        97,
                        53,
                        87,
                        -71,
                        -122,
                        -63,
                        29,
                        -98,
                        -31,
                        -8,
                        -104,
                        17,
                        105,
                        -39,
                        -114,
                        -108,
                        -101,
                        30,
                        -121,
                        -23,
                        -50,
                        85,
                        40,
                        -33,
                        -116,
                        -95,
                        -119,
                        13,
                        -65,
                        -26,
                        66,
                        104,
                        65,
                        -103,
                        45,
                        15,
                        -80,
                        84,
                        -69,
                        22
                     };
                     c = new byte[]{
                        82,
                        9,
                        106,
                        -43,
                        48,
                        54,
                        -91,
                        56,
                        -65,
                        64,
                        -93,
                        -98,
                        -127,
                        -13,
                        -41,
                        -5,
                        124,
                        -29,
                        57,
                        -126,
                        -101,
                        47,
                        -1,
                        -121,
                        52,
                        -114,
                        67,
                        68,
                        -60,
                        -34,
                        -23,
                        -53,
                        84,
                        123,
                        -108,
                        50,
                        -90,
                        -62,
                        35,
                        61,
                        -18,
                        76,
                        -107,
                        11,
                        66,
                        -6,
                        -61,
                        78,
                        8,
                        46,
                        -95,
                        102,
                        40,
                        -39,
                        36,
                        -78,
                        118,
                        91,
                        -94,
                        73,
                        109,
                        -117,
                        -47,
                        37,
                        114,
                        -8,
                        -10,
                        100,
                        -122,
                        104,
                        -104,
                        22,
                        -44,
                        -92,
                        92,
                        -52,
                        93,
                        101,
                        -74,
                        -110,
                        108,
                        112,
                        72,
                        80,
                        -3,
                        -19,
                        -71,
                        -38,
                        94,
                        21,
                        70,
                        87,
                        -89,
                        -115,
                        -99,
                        -124,
                        -112,
                        -40,
                        -85,
                        0,
                        -116,
                        -68,
                        -45,
                        10,
                        -9,
                        -28,
                        88,
                        5,
                        -72,
                        -77,
                        69,
                        6,
                        -48,
                        44,
                        30,
                        -113,
                        -54,
                        63,
                        15,
                        2,
                        -63,
                        -81,
                        -67,
                        3,
                        1,
                        19,
                        -118,
                        107,
                        58,
                        -111,
                        17,
                        65,
                        79,
                        103,
                        -36,
                        -22,
                        -105,
                        -14,
                        -49,
                        -50,
                        -16,
                        -76,
                        -26,
                        115,
                        -106,
                        -84,
                        116,
                        34,
                        -25,
                        -83,
                        53,
                        -123,
                        -30,
                        -7,
                        55,
                        -24,
                        28,
                        117,
                        -33,
                        110,
                        71,
                        -15,
                        26,
                        113,
                        29,
                        41,
                        -59,
                        -119,
                        111,
                        -73,
                        98,
                        14,
                        -86,
                        24,
                        -66,
                        27,
                        -4,
                        86,
                        62,
                        75,
                        -58,
                        -46,
                        121,
                        32,
                        -102,
                        -37,
                        -64,
                        -2,
                        120,
                        -51,
                        90,
                        -12,
                        31,
                        -35,
                        -88,
                        51,
                        -120,
                        7,
                        -57,
                        49,
                        -79,
                        18,
                        16,
                        89,
                        39,
                        -128,
                        -20,
                        95,
                        96,
                        81,
                        127,
                        -87,
                        25,
                        -75,
                        74,
                        13,
                        45,
                        -27,
                        122,
                        -97,
                        -109,
                        -55,
                        -100,
                        -17,
                        -96,
                        -32,
                        59,
                        77,
                        -82,
                        42,
                        -11,
                        -80,
                        -56,
                        -21,
                        -69,
                        60,
                        -125,
                        83,
                        -103,
                        97,
                        23,
                        43,
                        4,
                        126,
                        -70,
                        119,
                        -42,
                        38,
                        -31,
                        105,
                        20,
                        99,
                        85,
                        33,
                        12,
                        125
                     };
                     d = new int[]{
                        1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, 171, 77, 154, 47, 94, 188, 99, 198, 151, 53, 106, 212, 179, 125, 250, 239, 197, 145
                     };
                     e = new int[]{
                        -1520213050,
                        -2072216328,
                        -1720223762,
                        -1921287178,
                        234025727,
                        -1117033514,
                        -1318096930,
                        1422247313,
                        1345335392,
                        50397442,
                        -1452841010,
                        2099981142,
                        436141799,
                        1658312629,
                        -424957107,
                        -1703512340,
                        1170918031,
                        -1652391393,
                        1086966153,
                        -2021818886,
                        368769775,
                        -346465870,
                        -918075506,
                        200339707,
                        -324162239,
                        1742001331,
                        -39673249,
                        -357585083,
                        -1080255453,
                        -140204973,
                        -1770884380,
                        1539358875,
                        -1028147339,
                        486407649,
                        -1366060227,
                        1780885068,
                        1513502316,
                        1094664062,
                        49805301,
                        1338821763,
                        1546925160,
                        -190470831,
                        887481809,
                        150073849,
                        -1821281822,
                        1943591083,
                        1395732834,
                        1058346282,
                        201589768,
                        1388824469,
                        1696801606,
                        1589887901,
                        672667696,
                        -1583966665,
                        251987210,
                        -1248159185,
                        151455502,
                        907153956,
                        -1686077413,
                        1038279391,
                        652995533,
                        1764173646,
                        -843926913,
                        -1619692054,
                        453576978,
                        -1635548387,
                        1949051992,
                        773462580,
                        756751158,
                        -1301385508,
                        -296068428,
                        -73359269,
                        -162377052,
                        1295727478,
                        1641469623,
                        -827083907,
                        2066295122,
                        1055122397,
                        1898917726,
                        -1752923117,
                        -179088474,
                        1758581177,
                        0,
                        753790401,
                        1612718144,
                        536673507,
                        -927878791,
                        -312779850,
                        -1100322092,
                        1187761037,
                        -641810841,
                        1262041458,
                        -565556588,
                        -733197160,
                        -396863312,
                        1255133061,
                        1808847035,
                        720367557,
                        -441800113,
                        385612781,
                        -985447546,
                        -682799718,
                        1429418854,
                        -1803188975,
                        -817543798,
                        284817897,
                        100794884,
                        -2122350594,
                        -263171936,
                        1144798328,
                        -1163944155,
                        -475486133,
                        -212774494,
                        -22830243,
                        -1069531008,
                        -1970303227,
                        -1382903233,
                        -1130521311,
                        1211644016,
                        83228145,
                        -541279133,
                        -1044990345,
                        1977277103,
                        1663115586,
                        806359072,
                        452984805,
                        250868733,
                        1842533055,
                        1288555905,
                        336333848,
                        890442534,
                        804056259,
                        -513843266,
                        -1567123659,
                        -867941240,
                        957814574,
                        1472513171,
                        -223893675,
                        -2105639172,
                        1195195770,
                        -1402706744,
                        -413311558,
                        723065138,
                        -1787595802,
                        -1604296512,
                        -1736343271,
                        -783331426,
                        2145180835,
                        1713513028,
                        2116692564,
                        -1416589253,
                        -2088204277,
                        -901364084,
                        703524551,
                        -742868885,
                        1007948840,
                        2044649127,
                        -497131844,
                        487262998,
                        1994120109,
                        1004593371,
                        1446130276,
                        1312438900,
                        503974420,
                        -615954030,
                        168166924,
                        1814307912,
                        -463709000,
                        1573044895,
                        1859376061,
                        -273896381,
                        -1503501628,
                        -1466855111,
                        -1533700815,
                        937747667,
                        -1954973198,
                        854058965,
                        1137232011,
                        1496790894,
                        -1217565222,
                        -1936880383,
                        1691735473,
                        -766620004,
                        -525751991,
                        -1267962664,
                        -95005012,
                        133494003,
                        636152527,
                        -1352309302,
                        -1904575756,
                        -374428089,
                        403179536,
                        -709182865,
                        -2005370640,
                        1864705354,
                        1915629148,
                        605822008,
                        -240736681,
                        -944458637,
                        1371981463,
                        602466507,
                        2094914977,
                        -1670089496,
                        555687742,
                        -582268010,
                        -591544991,
                        -2037675251,
                        -2054518257,
                        -1871679264,
                        1111375484,
                        -994724495,
                        -1436129588,
                        -666351472,
                        84083462,
                        32962295,
                        302911004,
                        -1553899070,
                        1597322602,
                        -111716434,
                        -793134743,
                        -1853454825,
                        1489093017,
                        656219450,
                        -1180787161,
                        954327513,
                        335083755,
                        -1281845205,
                        856756514,
                        -1150719534,
                        1893325225,
                        -1987146233,
                        -1483434957,
                        -1231316179,
                        572399164,
                        -1836611819,
                        552200649,
                        1238290055,
                        -11184726,
                        2015897680,
                        2061492133,
                        -1886614525,
                        -123625127,
                        -2138470135,
                        386731290,
                        -624967835,
                        837215959,
                        -968736124,
                        -1201116976,
                        -1019133566,
                        -1332111063,
                        1999449434,
                        286199582,
                        -877612933,
                        -61582168,
                        -692339859,
                        974525996
                     };
                     f = new int[]{
                        1353184337,
                        1399144830,
                        -1012656358,
                        -1772214470,
                        -882136261,
                        -247096033,
                        -1420232020,
                        -1828461749,
                        1442459680,
                        -160598355,
                        -1854485368,
                        625738485,
                        -52959921,
                        -674551099,
                        -2143013594,
                        -1885117771,
                        1230680542,
                        1729870373,
                        -1743852987,
                        -507445667,
                        41234371,
                        317738113,
                        -1550367091,
                        -956705941,
                        -413167869,
                        -1784901099,
                        -344298049,
                        -631680363,
                        763608788,
                        -752782248,
                        694804553,
                        1154009486,
                        1787413109,
                        2021232372,
                        1799248025,
                        -579749593,
                        -1236278850,
                        397248752,
                        1722556617,
                        -1271214467,
                        407560035,
                        -2110711067,
                        1613975959,
                        1165972322,
                        -529046351,
                        -2068943941,
                        480281086,
                        -1809118983,
                        1483229296,
                        436028815,
                        -2022908268,
                        -1208452270,
                        601060267,
                        -503166094,
                        1468997603,
                        715871590,
                        120122290,
                        63092015,
                        -1703164538,
                        -1526188077,
                        -226023376,
                        -1297760477,
                        -1167457534,
                        1552029421,
                        723308426,
                        -1833666137,
                        -252573709,
                        -1578997426,
                        -839591323,
                        -708967162,
                        526529745,
                        -1963022652,
                        -1655493068,
                        -1604979806,
                        853641733,
                        1978398372,
                        971801355,
                        -1427152832,
                        111112542,
                        1360031421,
                        -108388034,
                        1023860118,
                        -1375387939,
                        1186850381,
                        -1249028975,
                        90031217,
                        1876166148,
                        -15380384,
                        620468249,
                        -1746289194,
                        -868007799,
                        2006899047,
                        -1119688528,
                        -2004121337,
                        945494503,
                        -605108103,
                        1191869601,
                        -384875908,
                        -920746760,
                        0,
                        -2088337399,
                        1223502642,
                        -1401941730,
                        1316117100,
                        -67170563,
                        1446544655,
                        517320253,
                        658058550,
                        1691946762,
                        564550760,
                        -783000677,
                        976107044,
                        -1318647284,
                        266819475,
                        -761860428,
                        -1634624741,
                        1338359936,
                        -1574904735,
                        1766553434,
                        370807324,
                        179999714,
                        -450191168,
                        1138762300,
                        488053522,
                        185403662,
                        -1379431438,
                        -1180125651,
                        -928440812,
                        -2061897385,
                        1275557295,
                        -1143105042,
                        -44007517,
                        -1624899081,
                        -1124765092,
                        -985962940,
                        880737115,
                        1982415755,
                        -590994485,
                        1761406390,
                        1676797112,
                        -891538985,
                        277177154,
                        1076008723,
                        538035844,
                        2099530373,
                        -130171950,
                        288553390,
                        1839278535,
                        1261411869,
                        -214912292,
                        -330136051,
                        -790380169,
                        1813426987,
                        -1715900247,
                        -95906799,
                        577038663,
                        -997393240,
                        440397984,
                        -668172970,
                        -275762398,
                        -951170681,
                        -1043253031,
                        -22885748,
                        906744984,
                        -813566554,
                        685669029,
                        646887386,
                        -1530942145,
                        -459458004,
                        227702864,
                        -1681105046,
                        1648787028,
                        -1038905866,
                        -390539120,
                        1593260334,
                        -173030526,
                        -1098883681,
                        2090061929,
                        -1456614033,
                        -1290656305,
                        999926984,
                        -1484974064,
                        1852021992,
                        2075868123,
                        158869197,
                        -199730834,
                        28809964,
                        -1466282109,
                        1701746150,
                        2129067946,
                        147831841,
                        -420997649,
                        -644094022,
                        -835293366,
                        -737566742,
                        -696471511,
                        -1347247055,
                        824393514,
                        815048134,
                        -1067015627,
                        935087732,
                        -1496677636,
                        -1328508704,
                        366520115,
                        1251476721,
                        -136647615,
                        240176511,
                        804688151,
                        -1915335306,
                        1303441219,
                        1414376140,
                        -553347356,
                        -474623586,
                        461924940,
                        -1205916479,
                        2136040774,
                        82468509,
                        1563790337,
                        1937016826,
                        776014843,
                        1511876531,
                        1389550482,
                        861278441,
                        323475053,
                        -1939744870,
                        2047648055,
                        -1911228327,
                        -1992551445,
                        -299390514,
                        902390199,
                        -303751967,
                        1018251130,
                        1507840668,
                        1064563285,
                        2043548696,
                        -1086863501,
                        -355600557,
                        1537932639,
                        342834655,
                        -2032450440,
                        -2114736182,
                        1053059257,
                        741614648,
                        1598071746,
                        1925389590,
                        203809468,
                        -1958134744,
                        1100287487,
                        1895934009,
                        -558691320,
                        -1662733096,
                        -1866377628,
                        1636092795,
                        1890988757,
                        1952214088,
                        1113045200
                     };
                     return;
                  }

                  var1 = var2.charAt(var7);
                  break;
               default:
                  var5[var3++] = var12;
                  if ((var7 += var1) < var4) {
                     var1 = var2.charAt(var7);
                     continue label24;
                  }

                  var2 = "X&1CVU,p\r\u0007C]T?9\n\f\nGR*u\n\u0011\u0006W'p\r\u0014\u0002_R/9\u0013\u0003\u0011RV.m\u0006\u0010CCZ8j\u0006\u0006CGTkX&1CZU\"mCOC";
                  var4 = "X&1CVU,p\r\u0007C]T?9\n\f\nGR*u\n\u0011\u0006W'p\r\u0014\u0002_R/9\u0013\u0003\u0011RV.m\u0006\u0010CCZ8j\u0006\u0006CGTkX&1CZU\"mCOC"
                     .length();
                  var1 = 26;
                  var7 = -1;
            }

            var10000 = var2.substring(++var7, var7 + var1);
            var10001 = 0;
         }
      }
   }

   private static char[] a(String var0) {
      char[] var10000 = var0.toCharArray();
      if (var10000.length < 2) {
         var10000[0] = (char)(var10000[0] ^ 'K');
      }

      return var10000;
   }

   private static String a(char[] var0) {
      int var10002 = var0.length;
      char[] var10001 = var0;
      int var10000 = var10002;

      for(int var1 = 0; var10000 > var1; ++var1) {
         char var10004 = var10001[var1];
         byte var10005;
         switch(var1 % 7) {
            case 0:
               var10005 = 25;
               break;
            case 1:
               var10005 = 99;
               break;
            case 2:
               var10005 = 98;
               break;
            case 3:
               var10005 = 99;
               break;
            case 4:
               var10005 = 51;
               break;
            case 5:
               var10005 = 59;
               break;
            default:
               var10005 = 75;
         }

         var10001[var1] = (char)(var10004 ^ var10005);
      }

      return new String(var10001);
   }
}
